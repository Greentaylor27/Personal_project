generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model questions {
  id         String    @id @db.Uuid
  option_a   String
  option_b   String
  created_at DateTime? @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         BigInt    @id
  name       String
  role       String    @default("collaborator")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  votes      votes[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model votes {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  poll_id  String?   @db.Uuid
  user_id  BigInt?
  choice   String
  voted_at DateTime? @default(now()) @db.Timestamptz(6)
  users    users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([poll_id, user_id])
}
